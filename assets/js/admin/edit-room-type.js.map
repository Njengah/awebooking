{"version":3,"names":[],"mappings":"","sources":["admin/edit-room-type.js"],"sourcesContent":["(function($, plugin, document) {\r\n  'use strict';\r\n\r\n  const data = window._awebookingRooms || {};\r\n\r\n  class RoomsGenerator {\r\n    constructor() {\r\n      this.rooms = ko.observableArray(data.rooms || []);\r\n      this.scaffoldNumber = ko.observable(0);\r\n    }\r\n\r\n    add() {\r\n      const title = this.getCurrentTitle();\r\n      const length = this.rooms().length;\r\n\r\n      this.rooms.push({\r\n        id: -1,\r\n        name: `${title} ${length + 1}`,\r\n      });\r\n    }\r\n\r\n    remove(item, e) {\r\n      const self = this;\r\n\r\n      if (item.id < 0) {\r\n        this._removeItemEffect(item, e);\r\n        return;\r\n      }\r\n\r\n      const ajaxDelete = function() {\r\n        return plugin.ajax('DELETE', `/ajax/delete-room/${item.id}`, {\r\n          _method: 'DELETE',\r\n          _wpnonce: data.deleteNonce,\r\n        }, function (data) {\r\n          self._removeItemEffect(item, e);\r\n          plugin.alert(data.message, 'success');\r\n        });\r\n      };\r\n\r\n      plugin.confirm(plugin.i18n.warning, () => {\r\n        ajaxDelete();\r\n      });\r\n    }\r\n\r\n    _removeItemEffect(item, e) {\r\n      $(e.currentTarget).closest('li').effect('highlight', {}, 150, () => {\r\n        this.rooms.remove(item);\r\n      });\r\n    }\r\n\r\n    scaffold() {\r\n      const title = this.getCurrentTitle();\r\n      const total = parseInt(this.scaffoldNumber(), 10) || 1;\r\n\r\n      // Clear the rooms.\r\n      this.rooms([]);\r\n\r\n      for (var i = 0; i < total; i++) {\r\n        this.rooms.push({\r\n          id: -1,\r\n          name: `${title} ${i + 1}`,\r\n        });\r\n      }\r\n    }\r\n\r\n    getCurrentTitle() {\r\n      let titleEl = document.getElementById('title');\r\n      return titleEl ? titleEl.value.trim() : 'R';\r\n    }\r\n  }\r\n\r\n  $(function() {\r\n    // Apply rooms generator binding.\r\n    ko.applyBindings(new RoomsGenerator(), document.getElementById('js-rooms-list'));\r\n\r\n    new Sortable($('.js-sorting-rooms')[0], {\r\n      handle: '.abrs-sortable__handle',\r\n      animation: 150,\r\n    });\r\n\r\n    // Handle click on tabs.\r\n    const $metabox = $('#awebooking-room-type-data');\r\n    $('.awebooking-tabs > li:first > a', $metabox).trigger('click');\r\n\r\n    $metabox.on('click', '.awebooking-tabs a', (e) => {\r\n      e.preventDefault();\r\n      const $target = $(e.target);\r\n\r\n      $('.awebooking-tabs > li.active', $metabox).removeClass('active');\r\n      $target.parent().addClass('active');\r\n\r\n      $('.awebooking-tabs-panels > div', $metabox).hide();\r\n      $($target.attr('href'), this.$metabox).show();\r\n    });\r\n\r\n    /**\r\n     * Scroll to first checked category.\r\n     *\r\n     * @link https://github.com/scribu/wp-category-checklist-tree/blob/master/category-checklist-tree.php\r\n     */\r\n    $('[id$=\"-all\"] > ul.categorychecklist').each(function() {\r\n      const $list = $(this);\r\n      const $firstChecked = $list.find(':checked').first();\r\n\r\n      if (! $firstChecked.length) {\r\n        return;\r\n      }\r\n\r\n      const posFirst = $list.find('input').position().top;\r\n      const posChecked = $firstChecked.position().top;\r\n\r\n      $list.closest('.tabs-panel').scrollTop(posChecked - posFirst + 5);\r\n    });\r\n  });\r\n\r\n})(jQuery, window.awebooking, document);\r\n"],"file":"edit-room-type.js"}